services:
  postgres:
    container_name: UserManagementDB_Container
    image: postgres:17-trixie
    environment:
      POSTGRES_USER_DB: usermanagement_db
      POSTGRES_USERBD_USER: UM_DbUser
      POSTGRES_FINANCIAL_DB: financial_db
      POSTGRES_FINANCIALDB_USER: FIN_DbUser
      POSTGRES_PASSWORD: 5uperUs3rPa$$
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [
        "CMD-SHELL", "pg_isready -U ${POSTGRES_USERBD_USER} -d ${POSTGRES_USER_DB}",
        "CMD-SHELL", "pg_isready -U ${POSTGRES_FINANCIALDB_USER} -d ${POSTGRES_FINANCIAL_DB}"
        ]
      interval: 5s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - ./create_user_db.sql:/docker-entrypoint-initdb.d/create_user_db.sql
      - ./create_financial_db.sql:/docker-entrypoint-initdb.d/create_financial_db.sql
      

  usermanagement-webapi:
    build:
      context: .
      dockerfile: Dockerfile.UserManagement.api
    container_name: UserManagementAPI_Container
    ports:
      - "5266:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    networks:
      - app-network

  financial-webapi:
    build:
      context: .
      dockerfile: Dockerfile.Financial.api
    container_name: FinancialAPI_Container
    ports:
      - "5255:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    networks:
      - app-network


  digitalwallet-web:
    build:
      context: .
      dockerfile: Dockerfile.DigitalWallet.web
    container_name: SelfResearchDigitalWalletWeb_Container
    ports:
      - "4222:4200"
    depends_on:
      - usermanagement-webapi
      - financial-webapi
    networks:
      - app-network

networks:
  app-network:
    driver: bridge